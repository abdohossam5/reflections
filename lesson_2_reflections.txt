What happens when you initialize a repository?
Why do you need to do it?
 
git init creates a hidden .git folder that 
contains the files that holds the metadata of the
repository.
I need to do it to let git know which files that
i will be tracking in this repository/folder.
===========================
How is the staging area different from the working 
directory and the repository? 
What value do you think it offers? 

staging area contains the files that i want to commit
working directory contains all the project files
repository contains the files in the working directory
and it keeps track of some of them.

it offers you the option to choose which files to commit so
you can choose if you don't want to commit some files or seperate
commits to serve one logical purpose.
===========================
How can you use the staging area to make sure you have one commit
per logical change?

use git diff --staged to compare between files in the staging area
and the last commit to limit the commit to one logical change.
===========================
What are some situations when branches would be helpful in keeping
your history organized? How would branches help?

it helps to seperate working on specific task from affecting the master
branch. so it allows us to have more control over the code and take more
risks on branches while the master is not affected.
branches helps to organize commits in categories that relates to their 
logical changes. example if i am working on a new feature then all 
the commits related to this feature will be attached to its branch not
the master.
===========================